- defaultTab: nodes
  description: "Executa o pipeline (ETL ‚Üí Features ‚Üí Prophet/ARIMA ‚Üí Anomalias) do projeto AI_Pred_Rundeck."
  executionEnabled: true
  group: AI_Pred_Rundeck/Jobs
  loglevel: INFO
  name: Run Pipeline - AI_Pred_Rundeck
  nodeFilterEditable: false
  notification:
    onfailure:
      - email:
          recipients: "sre@exemplo.com,ops@exemplo.com"
    onsuccess:
      - email:
          recipients: "data@exemplo.com"
  nodefilters:
    filter: "tags: bastion"
  multipleExecutions: false
  scheduleEnabled: true
  schedule:
    time:
      hour: "07"
      minute: "00"
      seconds: "00"
    month:
      month: "*"
    dayofmonth:
      day: "*"
    year:
      year: "*"
    weekday:
      day: "*"
  timeout: "1h"
  uuid: "7e0d5f9a-3a86-4f78-9f6b-6a6a1c9b9d10"
  options:
    - name: repo_dir
      description: "Diret√≥rio do projeto no n√≥ alvo."
      required: true
      default: "/opt/AI_Pred_Rundeck"
    - name: horizon
      description: "Horizonte de previs√£o (per√≠odos futuros)."
      required: true
      default: "30"
    - name: freq
      description: "Frequ√™ncia da s√©rie (D=di√°ria, H=hor√°ria)."
      required: true
      values:
        - D
        - H
      default: "D"
    - name: install_sys_deps
      description: "Instalar depend√™ncias de sistema (build-essential/venv) se necess√°rio?"
      required: true
      values:
        - "1"
        - "0"
      default: "1"
    - name: python_bin
      description: "Bin√°rio do Python."
      required: true
      default: "python3"
    - name: venv_dir
      description: "Diret√≥rio da virtualenv."
      required: true
      default: ".venv"
    - name: data_file
      description: "Caminho do CSV de dados (se vazio, o script gera um exemplo)."
      required: false
      default: "data/dados.csv"
  sequence:
    keepgoing: false
    strategy: node-first
    commands:
      - description: "Validar diret√≥rio e executar pipeline"
        script: |
          set -euo pipefail

          echo "‚û°Ô∏è  Entrando no diret√≥rio do projeto: ${option.repo_dir}"
          cd "${option.repo_dir}"

          # Exporta vari√°veis para o script
          export HORIZON="${option.horizon}"
          export FREQ="${option.freq}"
          export INSTALL_SYS_DEPS="${option.install_sys_deps}"
          export PYTHON_BIN="${option.python_bin}"
          export VENV_DIR="${option.venv_dir}"

          # DATA_FILE √© opcional; se n√£o existir usa padr√£o do script
          if [ -n "${option.data_file:-}" ]; then
            export DATA_FILE="${option.data_file}"
          fi

          # Confere script principal
          if [ ! -x "./run_pipeline.sh" ]; then
            if [ -f "./run_pipeline.sh" ]; then
              chmod +x ./run_pipeline.sh
            else
              echo "‚ùå Arquivo run_pipeline.sh n√£o encontrado em ${option.repo_dir}"
              exit 1
            fi
          fi

          echo "üöÄ Executando pipeline..."
          ./run_pipeline.sh

          echo "üì¶ Artefatos gerados em ./outputs/"
          ls -lh ./outputs || true

